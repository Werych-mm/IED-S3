tarefas = []            # Lista principal de tarefas (espa√ßo pra digitar a tarefa)
historico = []          # Pilha para desfazer tarefas (onde elas estar√£o armazenadas)
fila_execucao = []      # Fila para executar tarefas ("ordem que mostrar√° as tarefas")

tarefas_completa = []   # Lista para armazenar tarefas incluindo as informa√ß√µes de prioridade e data

def adicionar_tarefa(tarefa): # Cria uma fun√ß√£o com o nome "adicionar_tarefa" atrav√©s do comando "def" servindo para que o usuario possa adicionar tarefas
    prioridade = input("Digite a prioridade da tarefa (alta, m√©dia, baixa): ") # Solicita ao usu√°rio para digitar a prioridade da tarefa
    data = input("Digite a data de vencimento (formato: dd/mm/aaaa): ") # Solicita ao usu√°rio para digitar a data de vencimento
    tarefa_completa = (tarefa, prioridade, data) # iguala a tupla(um tipo de lista que √© imutav√©l) com tarefa, prioridade e data a v√°riavel "tarefa_completa"
    tarefas_completa.append(tarefa_completa) # Adiciona a tupla √† lista "tarefa_completa"
    tarefas.append(tarefa) # O append serve para adicionar algo a uma vari√°vel, ou seja, o que usu√°rio digitar vai ser adicionada √† vari√°vel "tarefas"
    historico.append(tarefa) # Aqui o que o usu√°rio digitou vai ser guardado na vari√°vel "historico", para que possa ser removido ou mostrado depois
    fila_execucao.append(tarefa) # Determina a ordem que as tarefas v√£o ser mostradas para o usu√°rio
    print(f"Tarefa '{tarefa}' com prioridade '{prioridade}' e data '{data}' adicionada!\n") # Mostra a mensagem "Tarefa (que o usuario digitou) com prioridade (que o usuario digitou) e data (que o usuario digitou)' adicionada!"

def desfazer_ultima_tarefa(): # Cria uma fun√ß√£o com o nome "desfazer_ultima_tarefa" atrav√©s do comando "def" servindo para que o usu√°rio possa desfazer a √∫ltima tarefa
    if historico: # Inicia uma condi√ß√£o com a vari√°vel "historico" para saber se ela est√° vazia
        ultima = historico.pop() # Aqui ele iguala vari√°vel "ultima" √† vari√°vel "historico", com a propriedade de "pop" que vai servir pra remover algum conte√∫do que esteja guardado nela 
        tarefas.remove(ultima) # Se a condi√ß√£o for verdadeira, ele remover√° o √∫ltimo conte√∫do adicionado que estiver na vari√°vel "ultima"
        fila_execucao.remove(ultima) # Remove o √∫ltimo conte√∫do que estiver guardado na vari√°vel "fila_execucao"
        print(f"Tarefa '{ultima}' desfeita!\n") # Mostra para o usu√°rio "tarefa (√∫ltima que ele digitou) desfeita!"
    else: # Se ela estiver vazia o conte√∫do da vari√°vel "ultima" n√£o ser√° igual ao conte√∫do da vari√°vel "historico" com a propriedade "pop".
        print("Nenhuma tarefa para desfazer.\n") # O programa vai mostrar na tela a mensagem "Nenhuma tarefa para desfazer."

def atender_tarefa(): # Cria uma fun√ß√£o com o nome "atender_tarefa" atrav√©s do comando "def" servindo para o usu√°rio informar ao programa que a tarefa foi finalizada
    if fila_execucao: # Inicia uma condi√ß√£o com a vari√°vel "fila_execucao" para analisar se ela est√° vazia
        feita = fila_execucao.pop(0) # Se elas forem iguais, o programa ir√° remover a primeira tarefa que foi digitada pelo usu√°rio (atrav√©s do comando "pop") e guardada na vari√°vel "fila_execu√ß√£o"
        tarefas.remove(feita) # Remove essa tarefa no espa√ßo de mem√≥ria onde estavam guardadas todas as tarefas
        print(f"Tarefa '{feita}' atendida!\n") # O programa vai mostrar na tela a mensagem "Tarefa (que estiver primeiro na fila) foi atendida"
    else: # Se a vari√°vel "fila_execucao" estiver vazia
        print("Nenhuma tarefa para atender.\n") # O programa vai mostrar a mensagem "Nenhuma tarefa para atender."

def mostrar_tarefas(): # Cria uma fun√ß√£o com o nome "mostrar_tarefas" atrav√©s do comando "def" servindo para que o usu√°rio possa ver as tarefas que ele digitou
    print("\nüìã Lista de Tarefas:") # O programa vai mostrar na tela a mensagem "üìã Lista de Tarefas:"
    for i, t in enumerate(tarefas_completa): # Agora, o programa vai enumerar as tarefas com prioridade e data
        tarefa, prioridade, data = t # Desempacota a tupla de cada tarefa para mostrar a tarefa, prioridade e data
        print(f"{i + 1}. {tarefa} - Prioridade: {prioridade} - Data: {data}") # O programa vai mostrar a mensagem "(tarefa que o √∫sario digitou) - Prioridade: (que o usu√°rio digitou) - Data: (que o usu1√°rio digitou)"
    print() # O programa vai mostrar uma linha em branco (feita para fins est√©ticos e visibilidade do terminal melhor)

while True: # Uma estrutura de repeti√ß√£o que serve para manter o menu funcionando at√© a op√ß√£o de sa√≠da ser escolhida
    print("1. Adicionar Tarefa") # O programa vai mostrar na tela a mensagem "1. Adicionar Tarefa"
    print("2. Desfazer √öltima Tarefa") # O programa vai mostrar na tela a mensagem "Desfazer √öltima Tarefa"
    print("3. Atender Tarefa (modo fila)") # O programa vai mostrar na tela a mensagem "3. Atender Tarefa (modo fila)"
    print("4. Mostrar Tarefas") # O programa vai mostrar na tela a mensagem "4. Mostrar Tarefas"
    print("5. Sair") # O programa vai mostrar na tela a mensagem "5. Sair"

    opcao = input("Escolha uma op√ß√£o: ") # Cria uma vari√°vel chamada "opcao" que √© igualada ao valor que o usu√°rio digitar (atrav√©s do comando "input")

    if opcao == '1':  # Inicia uma condi√ß√£o com a vari√°vel "opcao" para saber se o n√∫mero que o usu√°rio digitou foi "1"
        tarefa = input("Digite a tarefa: ")  # Iguala a vari√°vel "tarefa" ao que o usu√°rio digitar (atrav√©s do input)
        adicionar_tarefa(tarefa)  # Chama a fun√ß√£o "adicionar_tarefa" para que o programa possa adicionar √† vari√°vel "tarefas" o que o usu√°rio digitou
    elif opcao == '2':  # Caso o n√∫mero que foi igualado √† vari√°vel "opcao" for "2"
        desfazer_ultima_tarefa()  # Chama a fun√ß√£o "desfazer_ultima_tarefa" para desfazer a √∫ltima tarefa digitada pelo usu√°rio
    elif opcao == '3':  # Caso o n√∫mero que foi igualado √† vari√°vel "opcao" for "3"
        atender_tarefa()  # Chama a fun√ß√£o "atender_tarefa" para atender/finalizar a primeira tarefa da fila da vari√°vel "fila_execucao"
    elif opcao == '4':  # Caso o n√∫mero que foi igualado √† vari√°vel "opcao" for "4"
        mostrar_tarefas()  # Chama a fun√ß√£o "mostrar_tarefas" que serve para exibir todas as tarefas que est√£o na vari√°vel "tarefas_completa"
    elif opcao == '5':  # Caso o n√∫mero que foi igualado √† vari√°vel "opcao" for "5"
        print("Saindo do programa...")  # O programa vai mostrar a mensagem "Saindo do programa..."
        break  # Finaliza a estrutura de repeti√ß√£o e sai do programa
    else: # Caso o usu√°rio tenha digitado qualquer outra coisa dos n√∫meros citados acima
        print("Op√ß√£o inv√°lida!\n")  # O programa vai mostrar a mensagem "Op√ß√£o inv√°lida!"
