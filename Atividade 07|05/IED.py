tarefas = []            # Lista principal de tarefas (espa√ßo pra digitar a tarefa)
historico = []          # Pilha para desfazer tarefas (onde elas estar√£o armazenadas)
fila_execucao = []      # Fila para executar tarefas ("ordem que mostrar√° as tarefas")

def adicionar_tarefa(tarefa): #Cria uma fun√ß√£o com o nome "adiconar_tarefa" atrav√©s do comando "def" servindo para que o usuario possa adicionar tarefas
    tarefas.append(tarefa) #O append serve para adiconar algo a uma v√°riavel, ou seja, o que usu√°rio digitar vai ser adicionada a vari√°vel "tarefa" 
    historico.append(tarefa) #aqui o que us√∫ario digitou vai ser guardado a variav√©l "historico", para que possa ser removida ou mostrada depois
    fila_execucao.append(tarefa) #determina a ordem que as tarefas v√£o ser mostradas para o usuario
    print(f"Tarefa '{tarefa}' adicionada!\n") #mostra a mensagem "tarefa (o que o usuario digitou) adicionada!"

def desfazer_ultima_tarefa(): #Cria uma fun√ß√£o com o nome "desfazer_ultima_tarefa" atrav√©s do comando "def" servindo para que o usuario possa desfazer a ultima tarefa
    if historico: #inicia uma condi√ß√£o com a variavel "historico" para saber se ela est√° vazia
        ultima = historico.pop() #aqui ele iguala variavel "ultima" a variavel "historico", com a propriedade de "pop" que vai servir pra remover algum cont√©udo que esteja guarado nela 
        tarefas.remove(ultima) #se a condi√ß√£o for verdadeira, ele removera o ultimo cont√©udo adicionado que estiver na variavel "ultima"
        fila_execucao.remove(ultima) #remove o ultimo conteudo que estiver guardado na variavel "fila_execucao"
        print(f"Tarefa '{ultima}' desfeita!\n") #mostra para o usuario "tarefa (ultima que ele digitou) desfeita!"
    else: #se ela estiver vazia o conte√∫do da variavel "ultima" n√£o seja igual ao conteudo da variavel "historico" com a proprieda "pop".
        print("Nenhuma tarefa para desfazer.\n") #o programa vai mostrar na tela a mensagem "Nenhuma tarefa para desfazer." 

def atender_tarefa(): #Cria uma fun√ß√£o com o nome "atender_tarefa" atrav√©s do comando "def" servindo para o usuario inforar ao programa que a tarefa foi finalizada
    if fila_execucao: #inicia uma condi√ß√£o com a variavel "fila_execucao" para analisar se ela est√° vazia
        feita = fila_execucao.pop(0) #se elas forem iguais, o programa ir√° remover a primeira tarefa que foi digitada pelo usu√°rio(atrav√©s do comando "pop") e guardada na v√°rivael"fila_execuc√£o"
        tarefas.remove(feita) #remove essa tarefa no espa√ßo de mem√≥ria onde estavam guardadas todas as tarefas
        print(f"Tarefa '{feita}' atendida!\n") #O programa vai mostar na tela a mensagem "Tarefa (que estiver primeiro na fila) foi atendida"
    else: #se a v√°rivael "fila_execucao" estiver vazia
        print("Nenhuma tarefa para atender.\n") #O programa vai mostrar a mensagem "Nenhuma tarefa para atender."

def mostrar_tarefas(): #Cria uma fun√ß√£o com o nome "mostrar_tarefas" atrav√©s do comando "def" servindo para que o usuario possa ver as tarefas que ele digitou
    print("\nüìã Lista de Tarefas:") #O programa vai mostar na tela a mensagem "üìã Lista de Tarefas:"
    for i, t in enumerate(tarefas): #Usa a estrutura for com 'enumerate' que serve para pegar o √≠ndice e o conte√∫do de cada tarefa
        print(f"{i + 1}. {t}") #O programa vai mostrar as tarefas que o usuario digitou (o i +1 foi usado para a lista come√ßar do 1) 
    print() #O programa vai mostrar uma linha em branco(feita para fins est√©ticos e visibilade do terminal melhor)

while True: #Uma estrutura de repeti√ß√£o que serve para manter o menu funcionando at√© a op√ß√£o de sa√≠da ser escolhida
    print("1. Adicionar Tarefa") #O programa vai mostrar na tela a mensagem "1. Adicionar Tarefa"
    print("2. Desfazer √öltima Tarefa") #O programa vai mostrar na tela a mensagem "Desfazer √öltima Tarefa"
    print("3. Atender Tarefa (modo fila)") #O programa vai mostrar na tela a mensagem "3. Atender Tarefa (modo fila)"
    print("4. Mostrar Tarefas") #O programa vai mostrar na tela a mensagem "4. Mostrar Tarefas"
    print("5. Sair") #O programa vai mostrar na tela a mensagem "5. Sair"

    opcao = input("Escolha uma op√ß√£o: ") #Cria uma variavel chamada "opcao" que √© igualada ao valor que usu√°rio digitar(atrav√©s do comando "input") 

    if opcao == '1':  #Incia uma condi√ß√£o com a variavel "opcao" para saber se o n√∫mero que o usuario digitou foi "1"
        tarefa = input("Digite a tarefa: ")  #Iguala a v√°rivael "tarefa" ao usu√°rio digitar(atr√°ves do input)
        adicionar_tarefa(tarefa)  #Chama a fun√ß√£o "adicionar_tarefa" para que o programa possa adicionar a v√°rivael "tarefa" o que o usu√°rio digitou
    elif opcao == '2':  #Caso o n√∫mero que foi igualado a v√°rivael opcao for "2"
        desfazer_ultima_tarefa()  # Chama a fun√ß√£o "desfazer_ultima_tarefa" para desfazer a √∫ltima tarefa digitada pelo √∫suario
    elif opcao == '3':  #Caso o n√∫mero que foi igualado a v√°rivael "opcao" for "3"
        atender_tarefa()  # Chama a fun√ß√£o "atender_tarefa" para atender/finalizar a primeira tarefa da fila da v√°riavel "fila_execucao"
    elif opcao == '4':  #Caso o n√∫mero que foi igualado a v√°rivael "opcao" for "4"
        mostrar_tarefas()  # Chama a fun√ß√£o "mostrar_tarefas" que serve para exibir todas as tarefas que est√£o na v√°riavel "fila_execucao"
    elif opcao == '5':  #Caso o n√∫mero que foi igualado a v√°rivael "opcao" for "5"
        print("Saindo do programa...")  #O programa vai mostrar a mensagem  "Saindo do programa..."
        break  #Finaliza a estrutura de repeti√ß√£o e sa√≠ do programa
    else: #Caso o us√∫ario tenha digitado qualquer outra coisa dos n√∫meros citados acima
        print("Op√ß√£o inv√°lida!\n")  #O programa vai mostar a mensagem "Op√ß√£o inv√°lida!"